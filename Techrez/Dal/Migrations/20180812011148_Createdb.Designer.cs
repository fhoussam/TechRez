// <auto-generated />
using Dal.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dal.Migrations
{
    [DbContext(typeof(TechrezDbContext))]
    [Migration("20180812011148_Createdb")]
    partial class Createdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dal.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new { Id = 1, Description = "Power supply unit" },
                        new { Id = 2, Description = "Graphics card" }
                    );
                });

            modelBuilder.Entity("Dal.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<float>("Price");

                    b.Property<int>("Stock");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new { Id = 1, CategoryID = 1, Description = "Earthwatts 500", Price = 56f, Stock = 23 },
                        new { Id = 2, CategoryID = 1, Description = "EVGA 850", Price = 80f, Stock = 14 },
                        new { Id = 3, CategoryID = 1, Description = "Cooler master 750", Price = 69f, Stock = 8 },
                        new { Id = 4, CategoryID = 2, Description = "Intel 3750k", Price = 250f, Stock = 6 },
                        new { Id = 5, CategoryID = 2, Description = "Intel 4770k", Price = 320f, Stock = 11 }
                    );
                });

            modelBuilder.Entity("Dal.Models.Product", b =>
                {
                    b.HasOne("Dal.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
